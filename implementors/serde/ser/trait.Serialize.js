(function() {var implementors = {
"elastic_elgamal":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/sharing/struct.Params.html\" title=\"struct elastic_elgamal::sharing::Params\">Params</a>"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/sharing/struct.Dealer.html\" title=\"struct elastic_elgamal::sharing::Dealer\">Dealer</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.CandidateDecryption.html\" title=\"struct elastic_elgamal::CandidateDecryption\">CandidateDecryption</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.CommitmentEquivalenceProof.html\" title=\"struct elastic_elgamal::CommitmentEquivalenceProof\">CommitmentEquivalenceProof</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.LogEqualityProof.html\" title=\"struct elastic_elgamal::LogEqualityProof\">LogEqualityProof</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.RingProof.html\" title=\"struct elastic_elgamal::RingProof\">RingProof</a>&lt;G&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/dkg/struct.Opening.html\" title=\"struct elastic_elgamal::dkg::Opening\">Opening</a>"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.SumOfSquaresProof.html\" title=\"struct elastic_elgamal::SumOfSquaresProof\">SumOfSquaresProof</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.Ciphertext.html\" title=\"struct elastic_elgamal::Ciphertext\">Ciphertext</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/sharing/struct.ActiveParticipant.html\" title=\"struct elastic_elgamal::sharing::ActiveParticipant\">ActiveParticipant</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.PublicKey.html\" title=\"struct elastic_elgamal::PublicKey\">PublicKey</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/sharing/struct.PublicKeySet.html\" title=\"struct elastic_elgamal::sharing::PublicKeySet\">PublicKeySet</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.ProofOfPossession.html\" title=\"struct elastic_elgamal::ProofOfPossession\">ProofOfPossession</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/dkg/struct.ParticipantExchangingSecrets.html\" title=\"struct elastic_elgamal::dkg::ParticipantExchangingSecrets\">ParticipantExchangingSecrets</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/app/struct.QuadraticVotingBallot.html\" title=\"struct elastic_elgamal::app::QuadraticVotingBallot\">QuadraticVotingBallot</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>, S: <a class=\"trait\" href=\"elastic_elgamal/app/trait.ProveSum.html\" title=\"trait elastic_elgamal::app::ProveSum\">ProveSum</a>&lt;G&gt;&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/app/struct.EncryptedChoice.html\" title=\"struct elastic_elgamal::app::EncryptedChoice\">EncryptedChoice</a>&lt;G, S&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/dkg/struct.ParticipantCollectingCommitments.html\" title=\"struct elastic_elgamal::dkg::ParticipantCollectingCommitments\">ParticipantCollectingCommitments</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.SecretKey.html\" title=\"struct elastic_elgamal::SecretKey\">SecretKey</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.RangeProof.html\" title=\"struct elastic_elgamal::RangeProof\">RangeProof</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.Keypair.html\" title=\"struct elastic_elgamal::Keypair\">Keypair</a>&lt;G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/struct.VerifiableDecryption.html\" title=\"struct elastic_elgamal::VerifiableDecryption\">VerifiableDecryption</a>&lt;G&gt;"],["impl&lt;'a, G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/dkg/struct.PublicInfo.html\" title=\"struct elastic_elgamal::dkg::PublicInfo\">PublicInfo</a>&lt;'a, G&gt;"],["impl&lt;G: <a class=\"trait\" href=\"elastic_elgamal/group/trait.Group.html\" title=\"trait elastic_elgamal::group::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.190/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"elastic_elgamal/dkg/struct.ParticipantCollectingPolynomials.html\" title=\"struct elastic_elgamal::dkg::ParticipantCollectingPolynomials\">ParticipantCollectingPolynomials</a>&lt;G&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()